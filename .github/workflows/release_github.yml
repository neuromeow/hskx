name: Creating Release on GitHub

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: ${{ matrix.target }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: arm-unknown-linux-musleabihf
          - os: ubuntu-latest
            target: armv7-unknown-linux-musleabihf
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: SebRollen/toml-action@v1.0.2
        id: version_from_toml
        with:
          file: Cargo.toml
          field: package.version
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
          profile: minimal
      - uses: Swatinem/rust-cache@v2.7.0
        with:
          key: ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target=${{ matrix.target }} --color=always --verbose
          use-cross: ${{ runner.os == 'Linux' }}
      - if: runner.os != 'Windows'
        run: |
          tar -cv LICENSE README.md \
            -C target/${{ matrix.target }}/release/ hskx |
            gzip --best > \
            hskx-${{ steps.version_from_toml.outputs.value }}-${{ matrix.target }}.tar.gz
      - if: runner.os != 'Windows'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}.tar.gz
          path: '*.tar.gz'
      - if: runner.os == 'Windows'
        run: |
          7z a hskx-${{ steps.version_from_toml.outputs.value }}-${{ matrix.target }}.zip `
            LICENSE README.md ./target/${{ matrix.target }}/release/hskx.exe
      - if: runner.os == 'Windows'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}.zip
          path: '*.zip'

  release:
    name: Create a draft release on GitHub
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v3
      - uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            */*.tar.gz
            */*.zip
